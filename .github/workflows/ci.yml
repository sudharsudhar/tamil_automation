name: Remote update execution
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        script: |
                  ls
                  echo "Heloo"
                  wget https://raw.githubusercontent.com/sudharsudhar/tamil_automation/master/app.py -O /root/sudhar/ci-cd-try/app.py
                  echo ("--------X--------X----------X-------")
                  cat /root/sudhar/ci-cd-try/app.py
                  echo ("--------X--------X----------X-------")
                  docker stop $(docker ps -q --filter ancestor=flask-hello-world)
                  # sleep 3
                  docker rm $(docker ps -aq --filter ancestor=flask-hello-world)
                  cd /root/sudhar/ci-cd-try/
                  docker build -t flask-hello-world .
                  docker run -d -p 4000:4000 flask-hello-world
                  echo ("--------X--------X----------X-------")
# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#     - name: executing remote ssh commands using password
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USER }}
#         key: ${{ secrets.SSH_KEY }}
#         script: |
#                   ls
#                   echo "Heloo"
#                   wget https://raw.githubusercontent.com/sudharsudhar/tamil_automation/master/app.py -O /root/sudhar/ci-cd-try/app.py
                  
#                   # Stop and remove any old containers
#                   docker stop $(docker ps -q --filter ancestor=flask-hello-world) || true
#                   docker rm $(docker ps -aq --filter ancestor=flask-hello-world) || true

#                   # Remove old image, forcing Docker to rebuild from scratch
#                   docker rmi flask-hello-world || true

#                   cd /root/sudhar/ci-cd-try/
                  
#                   # Force a fresh build with no cache and ensure no old image remains
#                   docker build --no-cache -t flask-hello-world .
                  
#                   # Run the new container
#                   docker run -d -p 4000:4000 flask-hello-world

#                   docker build --no-cache -t flask-hello-world .
#                   docker run -d -p 4000:4000 flask-hello-world
######################################################################################
# jobs:
#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     steps:
#     - name: executing remote ssh commands using password
#       uses: appleboy/ssh-action@master
#       with:
#         host: ${{ secrets.SSH_HOST }}
#         username: ${{ secrets.SSH_USER }}
#         key: ${{ secrets.SSH_KEY }}
#         script: |
#                   ls
#                   echo "Heloo"
#                   wget https://raw.githubusercontent.com/sudharsudhar/tamil_automation/master/app.py -O /root/sudhar/ci-cd-try/app.py
                  
#                   # Stop and remove any old containers
#                   docker stop $(docker ps -q --filter ancestor=flask-hello-world) || true
#                   docker rm $(docker ps -aq --filter ancestor=flask-hello-world) || true

#                   # Remove old image, forcing Docker to rebuild from scratch
#                   docker rmi flask-hello-world || true

#                   cd /root/sudhar/ci-cd-try/
                  
#                   # Force a fresh build with no cache and ensure no old image remains
#                   docker build --no-cache -t flask-hello-world .
                  
#                   # Run the new container
#                   docker run -d -p 4000:4000 flask-hello-world

